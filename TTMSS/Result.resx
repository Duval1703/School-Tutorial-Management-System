<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4wAAAOMBD+bfpwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARxSURBVFhHtZbd
        b9tkFMZ9B5MGd0gg7hDjAtaPOLZLGR1pkoKaritbmy3dKGu3daOwqoyNCmlcAGJrO3YF0sTGigT/CUIi
        VUXQtG7ANkBlZRM0K0KN7cSJ7cM59us2cWzHo+WRzk3S+vfE533PebiwgoNtj8JIZNAYiXxhjvDz5jC/
        bByKlo3XrVrWh/h5fSh6WR8SMnB4xyPs3zYuGG15Bo7ws+ZhXkEwWDXMA8IBwXYNRUF/jdVBrANRRc9E
        r5QOtG5jj3lwwcn2LXA0cgHhFYTb4HBwqAyyykTLlf3CeRiOPcweG05wvHUbHOUXEA4bgAPCobyPSszC
        3ugT7PHBgiNCBOHLmwfHSgtQGRCWtH6+mWG8xX75psPLA3Zp/cKSnBYfZ7haUZ9glL/6P8JB24u1R/we
        0u1bGHZd7MDVw0dEMD+bBPOraTAmUg3hlbEe0K9Mg35hEk1ILrhdxb7ohwxri121+tNO8IU5WJNSAGPm
        hD/87Lj1N47UXBbUfqkGXnoVq08qyKmqViCc7nktHF+7+em77FFVKmtoYrwefg7h+J1bt86cBKWvGi5C
        abdVF204TjiEew4Z8+sZ9hiXEKRPo4kGcNLPMx9BrmM7yGiiCg7FXlGG3Tgxabx6wa3Cnle/0hqRCQQH
        wSuFVcj2dsK3zz8L13Y2g9qLJmw4FHeJoO4S93NsttfD2WmnnvsBrM99vjO0ElybGLXg2Re2w/yOJvgp
        1gIKmiB4sceqSxzCabEEXjVj6i1/Ex4yymVYODVWA8+92ARXO5rhdieaSNkG1JSY5cxDfD4I7px2PaSJ
        IPgCtuHHnS2wGG+1TKjd4l8cwrVGcOe062cD2oEKA7+JbfilsxX+iEdA6RZLHIJtAyEmXOXjYAMmGrhx
        +s2G8EWsJTSQTwoaGchvBtwRmbg1eaIh/F6Chz8TwgpnJZlNgjsiE7+9Nx4MjwtwPyHk0ADGqCA4jVcf
        OF01Ki+Z+Pnvp8d84fmEACtdwpdoQMj4wnGx+A0i+54fg+tvH/M1YSgyLO57xRP+d1KEwsttGQ7Sz21F
        uOyG0zrVZ71HsQN3TvvNd477mrj/yQee8H+SkrIci2219gEFSDfcMoAr1S033Dntv556w3rtbuXPTNTB
        VxNYybbLFpxE6RXhFCDX4FaYwH1OK9URzXb3eK0+7dRzQ15vWSk3B/e6hDp4ISlppaT4FMPbQvj5GjhL
        MuqABLdxpdJWcxZL0D1fHOiC/NT79i/3hoMcb5ti2HVRJKP06hWjVNzjuY6mUBPO78A58EJC+g66n36I
        YWsFGBjL/cIdrxil9kXh+kstG4LLCfGuGm9/kuG8RdGZ0mt9jBKtVUor9b/BpTtysr2JYYIF6chjpT3C
        Nx4xChTc5QR80Ncux3ziuJ+oT5ReES5XxSgrTNAqpZUaAq7haz/n2/MwovSK8IuU4aqSDODncBfBXnAa
        MqtJ8VLdVduIaGJShiv2SJ+rKWmOwgTucw2hZdpquFh+WEkKs3KXNLg24RqK4/4FzIEa6QCAqmgAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>